

#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include "Logo.h"

// #define LOGO_WIDTH 128
// #define LOGO_HEIGHT 32
Logo::Logo()
{
}
int16_t _width = 128;
int16_t Logo::getWidth()
{
    return _width;
}
int16_t _height = 32;
int16_t getHeight()
{
    return _height;
}

const unsigned char bitmap [] PROGMEM=
{
    0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x30, 0x30, 0x30,
    0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0x30, 0x10,
    0x10, 0x30, 0x30, 0x20, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0,
    0x30, 0x30, 0x30, 0x30, 0x70, 0xE0, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x80, 0xC0, 0xE0, 0xF8, 0xF8, 0x58, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xFF, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
    0x08, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x18,
    0xF8, 0xF0, 0xC0, 0x00, 0x00, 0x20, 0xFF, 0xFF, 0x10, 0x10,
    0x18, 0x18, 0x0C, 0x0F, 0x03, 0x00, 0x20, 0xFC, 0xDE, 0x03,
    0x03, 0x01, 0x01, 0x03, 0x07, 0xFE, 0xFC, 0x00, 0x00, 0x00,
    0xFF, 0xFF, 0x06, 0x03, 0x01, 0x03, 0x07, 0xFE, 0xFE, 0x02,
    0x03, 0x03, 0x03, 0x0F, 0xFE, 0xF0, 0x00, 0x00, 0x70, 0xFC,
    0xBE, 0x33, 0x31, 0x31, 0x33, 0x33, 0x3E, 0x3C, 0x00, 0x01,
    0x01, 0xFF, 0xFF, 0x03, 0x03, 0x01, 0x00, 0x00, 0xF8, 0xFE,
    0x37, 0x31, 0x31, 0x31, 0x33, 0x37, 0x3E, 0x10, 0x00, 0x00,
    0x00, 0xFF, 0xBE, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x80, 0xE0, 0x70, 0x38, 0x9C, 0x8F, 0xC3,
    0xC1, 0xE0, 0xF6, 0xFF, 0xE2, 0x00, 0x00, 0x00, 0x80, 0xE0,
    0xC0, 0xE7, 0xE7, 0x46, 0xC6, 0xE6, 0x46, 0xE6, 0x66, 0xC0,
    0xC0, 0xE3, 0xE6, 0x46, 0xE6, 0xC4, 0xC6, 0x66, 0xE3, 0x43,
    0xE0, 0x40, 0xE0, 0xE0, 0xC7, 0x47, 0xC0, 0x40, 0xC0, 0x60,
    0xC0, 0xE0, 0xE0, 0x40, 0x60, 0xC1, 0xE3, 0xC6, 0x46, 0xC4,
    0x66, 0xE6, 0x63, 0xE3, 0xE0, 0x40, 0x40, 0x60, 0xE7, 0x47,
    0x40, 0xE0, 0x40, 0xE0, 0xE0, 0xE7, 0xE7, 0xE0, 0x40, 0x40,
    0xE0, 0x60, 0xE7, 0xE7, 0x60, 0xC0, 0x60, 0xC1, 0xE3, 0x46,
    0x46, 0xC4, 0x44, 0x46, 0xE6, 0x62, 0xC0, 0xE0, 0xE0, 0x61,
    0x47, 0x66, 0xE6, 0xC6, 0x60, 0x00, 0x00, 0x03, 0x07, 0x06,
    0x06, 0x04, 0x04, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x07,
    0x05, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0x7C, 0x7E,
    0x6F, 0x6F, 0x67, 0x67, 0x23, 0x33, 0x31, 0x31, 0x30, 0x30,
    0x7E, 0xFF, 0xB1, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x0E, 0x0E,
    0x0C, 0x0E, 0x0C, 0x0E, 0x0E, 0x04, 0x04, 0x0E, 0x06, 0x0E,
    0x0C, 0x0E, 0x0E, 0x0E, 0x0C, 0x06, 0x0C, 0x06, 0x07, 0x0F,
    0x0E, 0x0E, 0x0C, 0x06, 0x06, 0x04, 0x04, 0x0E, 0x06, 0x0E,
    0x0C, 0x0E, 0x0E, 0x06, 0x04, 0x0C, 0x0E, 0x0E, 0x07, 0x07,
    0x06, 0x04, 0x0C, 0x0E, 0x0E, 0x04, 0x04, 0x0E, 0x06, 0x0E,
    0x0C, 0x0E, 0x0E, 0x0E, 0x0C, 0x06, 0x0C, 0x06, 0x07, 0x0F,
    0x0E, 0x0E, 0x0C, 0x06, 0x06, 0x04, 0x04, 0x0E, 0x06, 0x0E,
    0x0C, 0x0E, 0x0E, 0x06, 0x04, 0x0C, 0x0E, 0x0E, 0x07, 0x07,
    0x06, 0x04, 0x0C, 0x0E, 0x0E, 0x04, 0x04, 0x0E, 0x06, 0x0E,
    0x0C, 0x0E, 0x0E, 0x0E, 0x0C, 0x06, 0x0C, 0x06, 0x0F, 0x0F,
    0x06, 0x0E, 0x0F, 0x07, 0x0C, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E,
    0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x04, 0x04, 0x0E, 0x06, 0x07,
    0x02, 0x00};

const uint16_t _byteLength = 512;
uint16_t Logo::getByteLength()
{
    return _byteLength;
}

void Logo::getBitmap(uint8_t *buffer)
{
    for (int i = 0; i < _byteLength; ++i)
    {
        buffer[i] = bitmap[i];
    }
}

// Generated using http://www.majer.ch/lcd/adf_bitmap.php

// Filename: Logo.jpg
// Filesize: 3701 Bytes

// Size bitmap: 512 bytes